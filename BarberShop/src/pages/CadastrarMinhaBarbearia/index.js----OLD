import React, { useState, useContext } from 'react';
import { Text, TouchableWithoutFeedback, Keyboard, Alert } from 'react-native';
import {useNavigation} from '@react-navigation/native'

import { Background, Logo, AreaInput, Input, BtnText, Btn } from '../../assets/styles';
import firebase from '../../services/firebaseConnection'

export default function CadastrarMinhaBarbearia() {
  const navigation = useNavigation()

  const [nomeBarbearia, setNomeBarbearia] = useState('');
  const [cidadeBarbearia, setCidadeBarbearia] = useState('');
  const [email, setEmail] = useState('');
  const [user, setUser] = useState(null);


  function cadastrarBarbearia(){
    Keyboard.dismiss();
   /* if(nomeBarbeiro || nomeBarbearia || cidadeBarbearia || numeroBarbeiros === null){
      alert('Preencha todos os campos.');
      return;
    }*/

    Alert.alert(
      'Confirmar cadastro',
      `${nomeBarbearia} de ${cidadeBarbearia}. Siga os prÃ³ximos passos para o cadastro`,
      [
        {
          text: 'Cancelar',
          style: 'cancel'
        },
        {
          text: 'BÃ³ra la',
          onPress: () => confirmaBarbearia()
        }
      ]
    )
    
  }

  // Cadastro de barbearia parceira
  async function confirmaBarbearia(nomeBarbearia, cidadeBarbearia, email){
        await firebase.auth().createUserWithEmailAndPassword(nomeBarbearia, cidadeBarbearia, email)
        .then(async (value)=>{
            let uid = value.user.uid;
            await firebase.database().ref('barbearia').child(uid).set({
                nome: nome
            })
            .then(() => {
                let data = {
                    uid: uid,
                    nomeBarbearia: nomeBarbearia,
                    cidadeBarbearia: cidadeBarbearia,
                    email: email
                };
                setNomeBarbearia(data);
                setCidadeBarbearia(data)
                setEmail(data);
            })
        })
        .catch((error) => {
            alert(error.code)
        })
    }

 return (
   <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>
     <Background>
            <Logo source={require('../../assets/img/Logo.png')}/>
            <Text>Cadastro de barberia</Text>
           
            <AreaInput>
                <Input 
                placeholder="Nome da Barbearia"
                autoCorrect={false}
                autoCapitalize="none"
                returnKeyType="next"
                value={nomeBarbearia}
                onChangeText= {(text) => setNomeBarbearia(text)}
               />
            </AreaInput>
            <AreaInput>
                <Input 
                placeholder="Cidade"
                autoCorrect={false}
                autoCapitalize="none"
                returnKeyType="next"
                value={cidadeBarbearia}
                onChangeText= {(text) => setCidadeBarbearia(text)}
               />
            </AreaInput>
            <AreaInput>
                <Input 
                placeholder="Cidade"
                autoCorrect={false}
                autoCapitalize="none"
                returnKeyType="next"
                value={email}
                onChangeText= {(text) => setEmail(text)}
               />
            </AreaInput>

          <Btn onPress={cadastrarBarbearia}>
            <BtnText>Cadastrar minha barbearia</BtnText>
          </Btn>

   </Background>
   </TouchableWithoutFeedback>
  );
}